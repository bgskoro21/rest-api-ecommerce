// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Admin{
  username String @id @db.VarChar(100)
  name String @db.VarChar(100)
  password String @db.VarChar(100)
  profile_picture String? @db.VarChar(255)

  @@map("admins")
}

model InvalidToken{
  id Int @id @default(autoincrement())
  token_jwt String @db.LongText
  created_at DateTime @db.Timestamp()

  @@map("invalid_tokens")
}

model Customer{
  email String @id @db.VarChar(100)
  name String @db.VarChar(100)
  password String @db.VarChar(100)
  profile_picture String? @db.LongText
  verified_at DateTime?
  carts Carts[]
  orders Orders[]

  @@map("customers")
}

model Kategori{
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  picture String @db.LongText
  products Products[]

  @@map("categories")
}

model Products{
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  prices Int 
  picture String @db.LongText
  description String @db.LongText
  category_id Int
  category Kategori @relation(fields: [category_id], references: [id])
  sizes Sizes[]
  detail_order DetailOrder[]
  carts Carts[]

  @@map("products")
}

model Sizes{
  id Int @id @default(autoincrement())
  name String @db.VarChar(100)
  stock Int
  product_id Int
  products Products @relation(fields: [product_id], references: [id])

  @@map("sizes")
}

model Carts{
  id Int @id @default(autoincrement())
  email String @db.VarChar(100)
  product_id Int
  size_id Int
  quantity Int
  created_at DateTime
  customer Customer @relation(fields: [email], references: [email])
  products Products @relation(fields: [product_id], references: [id])

  @@map("carts")
}

enum Status{
  BELUM_BAYAR
  DIKEMAS
  DIKIRIM
  SELESAI
  DIBATALKAN
}

model Orders{
  id String @id @db.VarChar(100)
  email String @db.VarChar(100)
  order_date DateTime
  total_amount Int
  address String @db.LongText
  status Status @default(BELUM_BAYAR)
  customer Customer @relation(fields: [email], references: [email])
  detail_order DetailOrder[]
  payment Payments[]

  @@map("orders")
}

model DetailOrder{
  id Int @id @default(autoincrement())
  order_id String @db.VarChar(100)
  product_id Int
  size_id Int
  quantity Int
  price_per_unit Int
  total_price Int
  order Orders @relation(fields: [order_id], references: [id])
  product Products @relation(fields: [product_id], references: [id])

  @@map("detail_orders")
}

model Payments{
  id Int @id @default(autoincrement())
  order_id String @db.VarChar(100)
  amount Float
  status String
  payment_method String
  created_at DateTime @default(now())
  updated_at DateTime?
  orders Orders @relation(fields: [order_id], references: [id])

  @@map("payments")  
}